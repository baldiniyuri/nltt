version: '3.3'

services:
  app:
    build:
      context: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000 &&
             celery -A app beat"
    ports:
      - 8000:8000
    volumes:
      - ./app:/app
      - ./data/web:/vol/web
    environment:
      - DEBUG=1
      - SECRET_KEY=${SECRET_KEY}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - THROTTLE_ANON=${THROTTLE_ANON}
      - THROTTLE_USER=${THROTTLE_USER}
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
    ports:
      - 85:8000
    volumes:
      - static-data:/vol/static

volumes:
  postgres-data:
  static-data: